// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FaceRecognition/ImageProto.proto
#define PROTOBUF_USE_DLLS

#ifndef PROTOBUF_FaceRecognition_2fImageProto_2eproto__INCLUDED
#define PROTOBUF_FaceRecognition_2fImageProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_FaceRecognition_2fImageProto_2eproto();
void protobuf_InitDefaults_FaceRecognition_2fImageProto_2eproto();
void protobuf_AssignDesc_FaceRecognition_2fImageProto_2eproto();
void protobuf_ShutdownFile_FaceRecognition_2fImageProto_2eproto();

class ImageProto;

// ===================================================================

class ImageProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ImageProto) */ {
 public:
  ImageProto();
  virtual ~ImageProto();

  ImageProto(const ImageProto& from);

  inline ImageProto& operator=(const ImageProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageProto& default_instance();

  static const ImageProto* internal_default_instance();

  void Swap(ImageProto* other);

  // implements Message ----------------------------------------------

  inline ImageProto* New() const { return New(NULL); }

  ImageProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageProto& from);
  void MergeFrom(const ImageProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageProto* other);
  void UnsafeMergeFrom(const ImageProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string personName = 1;
  void clear_personname();
  static const int kPersonNameFieldNumber = 1;
  const ::std::string& personname() const;
  void set_personname(const ::std::string& value);
  void set_personname(const char* value);
  void set_personname(const char* value, size_t size);
  ::std::string* mutable_personname();
  ::std::string* release_personname();
  void set_allocated_personname(::std::string* personname);

  // repeated int32 data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // optional int32 cols = 3;
  void clear_cols();
  static const int kColsFieldNumber = 3;
  ::google::protobuf::int32 cols() const;
  void set_cols(::google::protobuf::int32 value);

  // optional int32 rows = 4;
  void clear_rows();
  static const int kRowsFieldNumber = 4;
  ::google::protobuf::int32 rows() const;
  void set_rows(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ImageProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr personname_;
  ::google::protobuf::int32 cols_;
  ::google::protobuf::int32 rows_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_FaceRecognition_2fImageProto_2eproto_impl();
  friend void  protobuf_AddDesc_FaceRecognition_2fImageProto_2eproto_impl();
  friend void protobuf_AssignDesc_FaceRecognition_2fImageProto_2eproto();
  friend void protobuf_ShutdownFile_FaceRecognition_2fImageProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ImageProto> ImageProto_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageProto

// optional string personName = 1;
inline void ImageProto::clear_personname() {
  personname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImageProto::personname() const {
  // @@protoc_insertion_point(field_get:ImageProto.personName)
  return personname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageProto::set_personname(const ::std::string& value) {
  
  personname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ImageProto.personName)
}
inline void ImageProto::set_personname(const char* value) {
  
  personname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ImageProto.personName)
}
inline void ImageProto::set_personname(const char* value, size_t size) {
  
  personname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ImageProto.personName)
}
inline ::std::string* ImageProto::mutable_personname() {
  
  // @@protoc_insertion_point(field_mutable:ImageProto.personName)
  return personname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageProto::release_personname() {
  // @@protoc_insertion_point(field_release:ImageProto.personName)
  
  return personname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageProto::set_allocated_personname(::std::string* personname) {
  if (personname != NULL) {
    
  } else {
    
  }
  personname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), personname);
  // @@protoc_insertion_point(field_set_allocated:ImageProto.personName)
}

// repeated int32 data = 2;
inline int ImageProto::data_size() const {
  return data_.size();
}
inline void ImageProto::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 ImageProto::data(int index) const {
  // @@protoc_insertion_point(field_get:ImageProto.data)
  return data_.Get(index);
}
inline void ImageProto::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ImageProto.data)
}
inline void ImageProto::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:ImageProto.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ImageProto::data() const {
  // @@protoc_insertion_point(field_list:ImageProto.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ImageProto::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ImageProto.data)
  return &data_;
}

// optional int32 cols = 3;
inline void ImageProto::clear_cols() {
  cols_ = 0;
}
inline ::google::protobuf::int32 ImageProto::cols() const {
  // @@protoc_insertion_point(field_get:ImageProto.cols)
  return cols_;
}
inline void ImageProto::set_cols(::google::protobuf::int32 value) {
  
  cols_ = value;
  // @@protoc_insertion_point(field_set:ImageProto.cols)
}

// optional int32 rows = 4;
inline void ImageProto::clear_rows() {
  rows_ = 0;
}
inline ::google::protobuf::int32 ImageProto::rows() const {
  // @@protoc_insertion_point(field_get:ImageProto.rows)
  return rows_;
}
inline void ImageProto::set_rows(::google::protobuf::int32 value) {
  
  rows_ = value;
  // @@protoc_insertion_point(field_set:ImageProto.rows)
}

inline const ImageProto* ImageProto::internal_default_instance() {
  return &ImageProto_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FaceRecognition_2fImageProto_2eproto__INCLUDED
